{"version":3,"sources":["NumberView/NumberView.tsx","utils/types.ts","utils/ls.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NumberView","value","label","id","textColor","textType","onChange","className","Paper","elevation","sx","padding","Typography","variant","color","Stack","direction","spacing","justifyContent","Button","size","onClick","Math","max","displayName","React","CoinTypes","memo","LS_KEYS","getFromLS","key","defaultValue","window","localStorage","getItem","e","console","error","setToLS","setItem","toString","darkTheme","createTheme","palette","mode","App","useState","Number","threat","setThreat","JSON","parse","stringify","lore","leadership","spirit","tactics","coins","setCoins","onThreatChange","useCallback","onSetCoins","newCoins","v","ThemeProvider","theme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86578906.chunk.js","sourcesContent":["import { Button, Paper, Stack, Typography } from \"@mui/material\";\nimport { Variant } from \"@mui/material/styles/createTypography\";\nimport React from \"react\";\nimport \"./NumberView.css\";\n\ninterface IPropTypes {\n  label: string;\n  value: number;\n  id?: string;\n  textColor?: string;\n  textType?: Variant;\n  onChange: (v: number, id: string | undefined) => void;\n}\n\nconst NumberView: React.FC<IPropTypes> = ({\n  value,\n  label,\n  id,\n  textColor,\n  textType = \"h5\",\n  onChange,\n}) => {\n  return (\n    <div className=\"NumberView\">\n      <Paper elevation={3} sx={{ padding: \"16px\" }}>\n        <Typography variant={textType} color={textColor}>\n          {label}: {value}\n        </Typography>\n        <Stack direction=\"row\" spacing={2} justifyContent=\"space-between\">\n          <Button\n            variant=\"outlined\"\n            size=\"large\"\n            onClick={() => onChange(Math.max(0, value - 1), id)}\n          >\n            -\n          </Button>\n          <Button\n            variant=\"outlined\"\n            size=\"large\"\n            onClick={() => onChange(value + 1, id)}\n          >\n            +\n          </Button>\n        </Stack>\n      </Paper>\n    </div>\n  );\n};\nNumberView.displayName = \"NumberView\";\n\nexport default React.memo(NumberView);\n","export enum CoinTypes {\n  lore = \"lore\",\n  leadership = \"leadership\",\n  spirit = \"spirit\",\n  tactics = \"tactics\",\n}\n\nexport interface ICoins {\n  [CoinTypes.leadership]: number;\n  [CoinTypes.lore]: number;\n  [CoinTypes.spirit]: number;\n  [CoinTypes.tactics]: number;\n}\n","export const LS_KEYS = {\n  threat: \"lotr_threat\",\n  coins: \"lotr_coins\",\n};\n\nexport function getFromLS(key: string, defaultValue: string): string {\n  let value: string;\n  try {\n    value = window.localStorage.getItem(key) ?? defaultValue;\n  } catch (e) {\n    console.error(e);\n\n    value = defaultValue;\n  }\n  return value;\n}\nexport function setToLS(key: string, value: any) {\n  try {\n    value = window.localStorage.setItem(key, value.toString());\n  } catch (e) {\n    console.error(e);\n  }\n}\n","import { createTheme, ThemeProvider } from \"@mui/material\";\nimport React, { useCallback, useState } from \"react\";\nimport \"./App.css\";\nimport NumberView from \"./NumberView/NumberView\";\nimport { getFromLS, LS_KEYS, setToLS } from \"./utils/ls\";\nimport { CoinTypes, ICoins } from \"./utils/types\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nfunction App() {\n  const [threat, setThreat] = useState<number>(() =>\n    Number(getFromLS(LS_KEYS.threat, \"0\"))\n  );\n  const [coins, setCoins] = useState<ICoins>(() =>\n    JSON.parse(\n      getFromLS(\n        LS_KEYS.coins,\n        JSON.stringify({ lore: 0, leadership: 0, spirit: 0, tactics: 0 })\n      )\n    )\n  );\n\n  const onThreatChange = useCallback((value: number) => {\n    setThreat(value);\n    setToLS(LS_KEYS.threat, value);\n  }, []);\n\n  const onSetCoins = useCallback((value: number, id: string | undefined) => {\n    if (id) {\n      let newCoins: ICoins | undefined;\n      setCoins((v) => {\n        newCoins = { ...v, [id]: value };\n        return newCoins;\n      });\n      setToLS(LS_KEYS.coins, JSON.stringify(newCoins));\n    }\n  }, []);\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <NumberView\n          label=\"Threat level\"\n          textType=\"h4\"\n          value={threat}\n          onChange={onThreatChange}\n        />\n        <NumberView\n          label=\"Leadership coins\"\n          textColor=\"#f544ff\"\n          value={coins.leadership}\n          id={CoinTypes.leadership}\n          onChange={onSetCoins}\n        />\n        <NumberView\n          label=\"Lore coins\"\n          textColor=\"#009f14\"\n          value={coins.lore}\n          id={CoinTypes.lore}\n          onChange={onSetCoins}\n        />\n        <NumberView\n          label=\"Spirit coins\"\n          textColor=\"#3597ff\"\n          value={coins.spirit}\n          id={CoinTypes.spirit}\n          onChange={onSetCoins}\n        />\n        <NumberView\n          label=\"Tactics coins\"\n          textColor=\"#f33231\"\n          value={coins.tactics}\n          id={CoinTypes.tactics}\n          onChange={onSetCoins}\n        />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}